# Generated by Django 4.2.6 on 2023-11-03 19:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Difficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe uma dificuldade com este nome.'}, help_text='Dificuldade', max_length=45, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Dificuldade',
                'verbose_name_plural': 'Dificuldades',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe um equipamento com este nome.'}, max_length=45, unique=True, verbose_name='Nome do equipamento')),
            ],
            options={
                'verbose_name': 'Equipamento',
                'verbose_name_plural': 'Equipamentos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe um exercício com este nome.'}, help_text='Nome do exercício', max_length=255, unique=True, verbose_name='Nome')),
                ('instructions', models.TextField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.'}, help_text='Instruções do exercício', verbose_name='Instruções')),
                ('difficulty', models.ForeignKey(help_text='Dificuldade do exercício', on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='exercise.difficulty', verbose_name='Dificuldade')),
                ('equipment', models.ManyToManyField(blank=True, help_text='Equipamento utilizado', related_name='exercises', to='exercise.equipment', verbose_name='Equipamento')),
            ],
            options={
                'verbose_name': 'Exercício',
                'verbose_name_plural': 'Exercícios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe um músculo com este nome.'}, help_text='Nome do músculo', max_length=45, unique=True, verbose_name='Nome')),
                ('is_front', models.BooleanField(default=True, verbose_name='Musculo frontal')),
            ],
            options={
                'verbose_name': 'Musculo',
                'verbose_name_plural': 'Musculos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe um tipo de exercício com este nome.'}, help_text='Nome do tipo de exercício', max_length=45, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de exercício',
                'verbose_name_plural': 'Tipos de exercícios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WeightUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Este campo não pode ficar em branco.', 'null': 'Este campo não pode ser nulo.', 'unique': 'Já existe uma unidade de peso com este nome.'}, help_text='Unidade do exercício', max_length=45, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Unidade de peso',
                'verbose_name_plural': 'Unidades de peso',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Apenas PNG, JPG e SVG', upload_to='media/exercise_images/', verbose_name='Imagem')),
                ('is_main', models.BooleanField(default=True, help_text='Marque a caixa se quiser definir esta imagem como principal para o exercício (será mostrada, por exemplo, na pesquisa). A primeira imagem é marcada automaticamente pelo sistema.', verbose_name='Imagem principal')),
                ('description', models.CharField(blank=True, help_text='Nome da imagem', max_length=45, null=True, verbose_name='Descrição')),
                ('exercise', models.ForeignKey(help_text='Exercício ao qual a imagem pertence', on_delete=django.db.models.deletion.PROTECT, related_name='images', to='exercise.exercise', verbose_name='Exercício')),
            ],
            options={
                'verbose_name': 'Imagem do exercício',
                'verbose_name_plural': 'Imagens dos exercícios',
                'ordering': ['-is_main', 'description'],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='muscles_primary',
            field=models.ManyToManyField(help_text='Músculo primário utilizado', related_name='muscles_primary_exercises', to='exercise.muscle', verbose_name='Músculo primário'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='muscles_secondary',
            field=models.ManyToManyField(blank=True, help_text='Músculo secundário utilizado', related_name='muscles_secondary_exercises', to='exercise.muscle', verbose_name='Músculo secundário'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='type_exercise',
            field=models.ForeignKey(help_text='Tipo de exercício', on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='exercise.typeexercise', verbose_name='Tipo de exercício'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='variations',
            field=models.ManyToManyField(blank=True, help_text='Variações do exercício', to='exercise.exercise', verbose_name='Variações'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='weight_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='exercise.weightunit', verbose_name='Unidade de peso'),
        ),
    ]
